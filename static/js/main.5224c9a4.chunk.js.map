{"version":3,"sources":["constants/index.js","api/index.js","api/home.js","components/BoardCreator/index.jsx","components/Home/index.jsx","components/Board/index.jsx","App.js","reportWebVitals.js","index.js"],"names":["api","baseURL","process","boards","instance","axios","create","headers","Authorization","interceptors","response","use","res","data","createBoard","title","post","BoardCreator","onChangeFunc","onSubmitFunc","onSubmit","htmlFor","placeholder","id","value","onChange","Home","state","isLoading","gotError","gotBoards","isBoardCreatorVisible","newTitle","showBoardCreator","setState","changeTitleInput","event","target","submitNewBoard","preventDefault","finally","then","catch","err","this","get","map","board","to","makeBoards","onClick","React","Component","Board","props","match","params","App","className","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5224c9a4.chunk.js","sourcesContent":["export const api = {\n  baseURL: process.env.REACT_APP_API_URL || '',\n  boards: 'board',\n};\n","import axios from 'axios';\nimport { api } from '../constants';\n\nconst instance = axios.create({\n  baseURL: api.baseURL,\n  headers: {\n      'Content-Type': 'application/json',\n      Authorization: 'Bearer 123'\n  },\n});\n\ninstance.interceptors.response.use((res) => res.data);\nexport default instance;","import { api } from '../constants';\nimport instance from './index';\n\nexport const getBoards = () => {\n  return instance.get(api.boards);\n}\n\nexport const createBoard = (title) => {\n  return instance.post(api.boards, {title: title});\n}\n","export default function BoardCreator({title, onChangeFunc, onSubmitFunc}) {\n  \n  return (\n    <form onSubmit={onSubmitFunc}>\n      <label htmlFor=\"newTitle\">New board title</label>\n      <input \n        placeholder=\"Type new board title here...\" \n        id=\"newTitle\" \n        value={title}\n        onChange={onChangeFunc}\n        ></input>\n      <button>Add board</button>\n    </form>\n  )\n}","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { getBoards, createBoard } from '../../api/home';\nimport BoardCreator from '../BoardCreator';\n\nexport default class Home extends React.Component {\n  \n  state = {\n    isLoading: false,\n    gotError: false,\n    gotBoards: false,\n    boards: [],\n    isBoardCreatorVisible: false,\n    newTitle: '',\n  }\n\n  componentDidMount() {\n    this.setState({\n      isLoading: true\n    });\n\n    getBoards()\n    .finally(this.setState({isLoading: false}))\n    .then(({ boards }) => {\n      this.setState({\n        boards,\n        gotBoards: true\n      })\n    })\n    .catch((err) => {\n      this.setState({gotError: true});\n    });\n     \n  }\n\n  showBoardCreator = () => {\n    this.setState({isBoardCreatorVisible: true});\n  }\n\n  changeTitleInput = (event) => {\n    this.setState({\n      newTitle: event.target.value,\n    })\n  }\n\n  submitNewBoard = (event) => {\n    event.preventDefault();\n    this.setState({isLoading: true});\n    \n    createBoard(this.state.newTitle)\n    .finally(this.setState({\n      isLoading: false,\n      isBoardCreatorVisible: false,\n    }))\n    .then((res) => {\n      this.setState((state) => ({\n          boards: [...state.boards, {id: res.id, title: this.state.newTitle}],\n          newTitle: '',\n      }));\n    })\n    .catch((err) => {\n      this.setState({gotError: true});\n    });\n  }\n\n  makeBoards() {\n    return this.state.boards.map(board => <Link key={board.id} to={`/board/${board.id}`}>{board.title}</Link>);\n  }\n\n  render() {\n    return (\n      <>\n        <h1>My boards</h1>\n        {this.state.isLoading && <h2>Loading...</h2>}\n        {\n          this.state.gotBoards && \n          <div>\n            {this.makeBoards()}\n            <button onClick={this.showBoardCreator}>Add board</button>\n          </div> \n        }\n        {this.state.gotError && <h2>Something went wrong...</h2>}\n        {\n          this.state.isBoardCreatorVisible && \n          <BoardCreator \n            title={this.state.newTitle} \n            onChangeFunc={this.changeTitleInput}\n            onSubmitFunc={this.submitNewBoard}\n          />}\n      </>\n    );\n  }\n};\n    ","import { Link } from 'react-router-dom';\n\nexport default function Board(props) {\n  const { id } = props.match.params;\n  return (\n    <>\n      <Link to='/'>Home</Link>\n      <h1>Board page number {id} </h1>\n    </>\n  );\n};\n","import { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Home from './components/Home';\nimport Board from './components/Board';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Switch>\n          <Route exact path=\"/\" component={ Home } />\n          <Route path=\"/board/:id\" component={ Board } />\n          <Route path=\"/react-trello\" component={ Home } />\n        </Switch>\n      </Router> \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}