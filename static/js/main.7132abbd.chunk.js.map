{"version":3,"sources":["api/index.js","constants/index.js","components/Home/index.jsx","components/Board/index.jsx","App.js","reportWebVitals.js","index.js"],"names":["instance","axios","create","baseURL","process","headers","Authorization","interceptors","response","use","res","data","Home","state","isLoading","gotError","gotBoards","boards","this","setState","api","get","finally","then","catch","err","map","board","to","id","title","makeBoards","React","Component","Board","props","match","params","App","className","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uQAGMA,E,OAAWC,EAAMC,OAAO,CAC5BC,QCHSC,4CDITC,QAAS,CACL,eAAgB,mBAChBC,cAAe,gBAIrBN,EAASO,aAAaC,SAASC,KAAI,SAACC,GAAD,OAASA,EAAIC,QACjCX,Q,OERMY,E,4MAEnBC,MAAQ,CACNC,WAAW,EACXC,UAAU,EACVC,WAAW,EACXC,OAAQ,I,uDAGV,WAAqB,IAAD,OAClBC,KAAKC,SAAS,CACZL,WAAW,IAEbM,EAAIC,IAAI,SACPC,QAAQJ,KAAKC,SAAS,CAACL,WAAW,KAClCS,MAAK,YAAiB,IAAdN,EAAa,EAAbA,OACP,EAAKE,SAAS,CACZF,SACAD,WAAW,OAGdQ,OAAM,SAACC,GACN,EAAKN,SAAS,CAACJ,UAAU,S,wBAK7B,WACE,OAAOG,KAAKL,MAAMI,OAAOS,KAAI,SAAAC,GAAK,OAAI,cAAC,IAAD,CAAqBC,GAAE,iBAAYD,EAAME,IAAzC,SAAgDF,EAAMG,OAA3CH,EAAME,S,oBAGzD,WACE,OACE,qCACE,2CACCX,KAAKL,MAAMC,WAAa,4CACxBI,KAAKL,MAAMG,WAAaE,KAAKa,aAC7Bb,KAAKL,MAAME,UAAY,gE,GArCEiB,IAAMC,WCFzB,SAASC,EAAMC,GAC5B,IAAQN,EAAOM,EAAMC,MAAMC,OAAnBR,GACR,OACE,qCACE,cAAC,IAAD,CAAMD,GAAG,IAAT,kBACA,oDAAuBC,EAAvB,U,MCYSS,MAdf,WACE,OACE,qBAAKC,UAAU,MAAf,SACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAY9B,IAClC,cAAC,IAAD,CAAO6B,KAAK,aAAaC,UAAYR,IACrC,cAAC,IAAD,CAAOO,KAAK,gBAAgBC,UAAY9B,YCAnC+B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBtB,MAAK,YAAkD,IAA/CuB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.7132abbd.chunk.js","sourcesContent":["import axios from 'axios';\nimport { api } from '../constants';\n\nconst instance = axios.create({\n  baseURL: api.baseURL,\n  headers: {\n      'Content-Type': 'application/json',\n      Authorization: 'Bearer 123'\n  },\n});\n\ninstance.interceptors.response.use((res) => res.data);\nexport default instance;","export const api = {\n  baseURL: process.env.REACT_APP_API_URL || '',\n};\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport api from '../../api';\n\nexport default class Home extends React.Component {\n  \n  state = {\n    isLoading: false,\n    gotError: false,\n    gotBoards: false,\n    boards: [],\n  }\n\n  componentDidMount() {\n    this.setState({\n      isLoading: true\n    });\n    api.get('board')\n    .finally(this.setState({isLoading: false}))\n    .then(({ boards }) => {\n      this.setState({\n        boards,\n        gotBoards: true\n      })\n    })\n    .catch((err) => {\n      this.setState({gotError: true});\n    });\n     \n  }\n\n  makeBoards() {\n    return this.state.boards.map(board => <Link key={board.id} to={`/board/${board.id}`}>{board.title}</Link>);\n  }\n\n  render() {\n    return (\n      <>\n        <h1>My boards</h1>\n        {this.state.isLoading && <h2>Loading...</h2>}\n        {this.state.gotBoards && this.makeBoards()}\n        {this.state.gotError && <h2>Something went wrong...</h2>}\n      </>\n    );\n  }\n};\n    ","import { Link } from 'react-router-dom';\n\nexport default function Board(props) {\n  const { id } = props.match.params;\n  return (\n    <>\n      <Link to='/'>Home</Link>\n      <h1>Board page number {id} </h1>\n    </>\n  );\n};\n","import { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Home from './components/Home';\nimport Board from './components/Board';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Switch>\n          <Route exact path=\"/\" component={ Home } />\n          <Route path=\"/board/:id\" component={ Board } />\n          <Route path=\"/react-trello\" component={ Home } />\n        </Switch>\n      </Router> \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}